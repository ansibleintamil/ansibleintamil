root@control:~# cat task.yml
- file:
   name: /tmp/sample.txt
   state: touch
  notify: file content

- command:
    cat /tmp/sample.txt
  register: cmd_result

- debug:
   var: cmd_result.stdout

########################################################

root@control:~# cat import_tasks.yml
---
 - hosts: all
   tasks:
    - import_tasks: task.yml
   handlers:
    - name: file content 
      copy:
       dest: /tmp/sample.txt
       content: "This is a sample file." 

#########################################################

#importing playbooks
root@control:~# cat import_playbook.yml
---
 - import_playbook: import_tasks.yml
 - hosts: all
   tasks:
    - debug:
        msg: "This is my second playbook"

#########################################################

#Slicing your List variable  using index ID

---
 - hosts: all
   vars:
      package:
         ["samba","chrony","httpd"]
   tasks:
     - yum:
        name: "{{ package[0] }}"
        state: absent

#########################################################
ansible-playbook passing_multiple_parameters.yml -e "package=['samba','chrony','httpd']"

---
 - hosts: all
   tasks:
     - yum:
        name: "{{ item }}"
        state: installed
       with_items:
         "{{ package }}"

#########################################################
# Conditional statement using list
---
 - hosts: all
   vars:
      package:
         ["samba","chrony","httpd"]
   tasks:
     - yum:
        name: "{{ package }}"
        state: absent
       when: "'samba' not in package"

#########################################################
# Conditional statement using loop
---
 - hosts: all
   vars:
      package:
         ["samba","chrony","httpd"]
   tasks:
     - yum:
        name: "{{ item }}"
        state: installed
       with_items:
         "{{ package }}"
       when: "(item == 'samba') and (package is defined)"

#########################################################

root@control:~# cat conditional_with_facts.yml
--- 
 - hosts: all
   tasks:
     - debug:
        var: ansible_default_ipv4.gateway, ansible_default_ipv4.address, ansible_hostname

     - debug:
        msg: "Processing hostname {{ ansible_hostname }}"

#     - command: hostnamectl
#       register: result
#       when: ansible_os_family == "RedHat"  #"ansible_eth0.ipv4.address == '10.5.0.165'"
     
#     - debug: 
#        var: result.stdout_lines

#########################################################
---
 - hosts: all
   tasks:
     - yum:
         name: "{{ package }}"
         state: absent
       changed_when: "package == 'samba'"
#########################################################
---
 - hosts: all
   tasks:
     - yum:
         name: "{{ package }}"
         state: absent
       failed_when: "package == 'samba'"

#########################################################
# Copy a file if it is not present on the client machines
---
 - hosts: all
   tasks:
     - stat:
         path: /tmp/sample.txt
       register: result
     - debug:
         var: result
     - copy:
         src: /tmp/sample.txt
         dest: /tmp/sample1.txt
       when: result.stat.exists == false
###########################################################

root@control:~# cat userlist.txt
userlist
--------
user01
user02
user03
user04
user05

root@control:~# cat creating_users_from_text_file.yml
---
 - hosts: all
   vars:
     input_file: "{{ lookup('file','userlist.txt') }}"
   tasks:
     - user:
        name: "{{ username }}"
        state: present
       when: id > 1
       loop:
        "{{ input_file.split('\n') }}"
       loop_control:
         loop_var: username
         index_var: id 
  
     - command: grep user /etc/passwd
        #"cat /etc/passwd | grep user"
       register: cmd_result
  
     - debug:
        var: cmd_result.stdout_lines
