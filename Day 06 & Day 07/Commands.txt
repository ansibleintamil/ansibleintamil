# 1_apache_installation.yml
---
 - name: "This is my first play to install apache software"
   hosts: appserver
   gather_facts: no
   tasks:
    - debug:
        msg: "Successfully Executed!"

#########################################################################

ansible-playbook 1_apache_installation.yml

#########################################################################

---
 - name: "This is my first play to install apache software"
   hosts: all
   gather_facts: no

   tasks:
   - name: "This task is to perform apache installation"
     yum: 
      name: http
      state: installed

   - debug:
       msg: "Apache installed Successfully!"

   - service:
       name: httpd
       state: reloaded

#############################################################################

To override the inventory for your specific playbooks,

ansible-playbook <playbookname> -i <inventoryname>

#############################################################################

To avoid gathering client system information use 
gather_facts: no

#############################################################################
# software_installation.yml

---
 - name: "To install specified software"
   hosts: all
   tasks:
   - name: "This task is to perform software  installation"
     yum: 
      name: "{{ software_name }}"
      state: installed

   - debug:
       msg: "{{ software_name }} installed Successfully!"

   - service:
       name: "{{ service_name }}"
       state: started

   - debug:
       var: "{{ service_name }} Started!!"

####################################################################################
ansible-playbook apache_installation.yml -e "software_name=httpd service_name=httpd"
####################################################################################

# Alternate ways to assign option values to modules

---
 - name: "To install specified software"
   hosts: all
   tasks:
   - name: "This task is to perform software  installation"
     yum:
      name={{ software_name }}
      state=installed

   - debug:
       msg="{{ software_name }} installed Successfully!"

   - service:
       name={{ service_name }}
       state=started

   - debug:
       var="{{ service_name }} Started!!"

####################################################################################
#Looping

---
 - name: Playbook with multiple items
   hosts: all
   tasks:
   - name: Install required packages
     yum:
       name={{ item }}
       state=installed
     with_items:
      - httpd
      - mariadb-server
      - samba

####################################################################################
# Notify - Handlers

---
 - name: Playbook with multiple items
   hosts: all
   tasks:
   - name: 'Check httpd package is present'
     yum:
       name=httpd
       state=present
     notify: restart httpd service
  
   handlers:
    - name : restart httpd service
      service:
        name=httpd
        state=restarted
####################################################################################

#Notify - Handlers - Listeners

---
- name: variable example
  hosts: all
  vars:
    pkg: httpd

  tasks:  
  - name: install httpd package
    yum:
      name={{ pkg }}
      state=present
    notify: start service

  handlers:
    - name: start httpd service
      service:
        name=httpd  state=started
      listen: start service

    - name: restart samba service
      service:
        name=smb  state=restarted
      listen: start service
####################################################################################

# Import external variable files to the playbook

# variable.yml
pkg: samba
pkg_service: smb

# import_variable_file.yml
---
- name: variable example
  hosts: all
  vars_files:
    - variable.yml
  tasks:
  - debug:
      msg: 'Package Name: {{ pkg }} , Service Name: {{ pkg_service }}'

  - name: install package
    yum:
      name={{ pkg }}
      state=present

  - name: start service
    service:
      name={{ pkg_service }}
      state=started
#################################################################################
# register, debug examples

---
- name: variable example
  hosts: all
  vars_files:
    - variable.yml
  tasks:
  - debug:
      msg: "Package Name: {{ pkg }} , Service Name: {{ pkg_service }}"

  - debug:
      var: pkg, pkg_service

  - name: install package
    yum:
      name={{ pkg }}
      state=absent
    register: installation_result

  - debug:
      msg: "{{ installation_result }}"

  - name: start service
    service:
      name={{ pkg_service }}
      state=started
##########################################################################
